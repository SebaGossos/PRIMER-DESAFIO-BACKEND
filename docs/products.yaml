paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      security:
        - bearerAuth: []
      responses:
        200:
          description: Returns an array of all the products
          content:
            application/json:
              example:
                status: success
                payload:
                - _id: 659482cc5918c84d6a2fd40b
                  title: SIUUU2
                  description: '23232'
                  price: 23432443
                  code: '234342432'
                  stock: 234342324
                  category: Agua
                  status: true
                  thumbnail:
                  - without image
                  owner: 2@2
                  __v: 0

        404:
          description: NOT FOUND
        500:
          description: Internal Server Error

    post:
      summary: Create a new product
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Returns the created product
          content:
            application/json:
            schema:
              items:
                $ref: "#/components/schemas/Product"
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /api/products/{pid}:
    get:
      summary: Get a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product to be retrieved
      responses:
        200:
          description: Successful response with the specified product
          content:
            application/json:
              type: Object
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Product not found
        500:
          description: Internal Server Error

    put:
      summary: Update a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product to be updated

      security:
        - bearerAuth: [] 
      responses:
        200:
          description: Product updated successfully
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Product'
        404:
          description: Product not found
        500:
          description: Internal Server Error

    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product to be deleted
      security:
        - bearerAuth: [] 
      responses:
        200:
          description: Product deleted successfully
          content:
            application/json:
              example:
                status: success
                message: "Product deleted successfully."
        404:
          description: Product not found
        500:
          description: Internal Server Error

  /api/products/mockingproducts:
    get:
      summary: Create mocking products
      tags:
        - Products
      responses:
        200:
          description: Mocking products created successfully
          content:
            application/json:
              example:
                status: success
                message: "Mocking products created successfully."
        500:
          description: Internal Server Error

  /api/products/query/{pcode}:
    get:
      summary: Create mocking products
      tags:
        - Products
      responses:
        200:
          description: Mocking products created successfully
          content:
            application/json:
              type: Object
              schema:
                $ref: '#/components/schemas/Product'
        500:
          description: Internal Server Error

components:
  schemas:
    Product:
      type: object
      properties:
        _id: 
          type: ObjectId
          description: Id autogenerated
        title:
          type: string
          description: The title of the product
        description:
          type: string
          description: The description of the product
        price:
          type: number
          description: The price of the product
        code:
          type: string
          description: The code of the product
        stock:
          type: number
          description: The stock of the product
        category:
          type: array
          items:
            type: string
          description: Product category
        status: 
          type: boolean
          description: True if product is available and the opposite is false
        thumbnail:
          type: array
          items:
            type: string
          description: URL of the product thumbnail image
        owner:
          type: string
          description: The email or name of the product owner
      required:
        - title
        - description
        - price
        - code
        - stock
        - category
        - owner
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT